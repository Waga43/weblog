{
  "hash": "670fbdbd52027eed58a9bdf6643cb47e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Post With Code\"\n# author: \"Abdulwasiu Bamidele Popoola\"\ndate: \"2025-03-10\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\ndraft: true\n---\n\n\nThis is a post with executable code.\n\n::: {#51c58720 .cell execution_count=1}\n``` {.python .cell-code}\ndef greeting(name = \"Waga\"):\n    print(f\"Good day {name}.\")\n\ngreeting()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGood day Waga.\n```\n:::\n:::\n\n\n::: callout-important\n## Don't do this\n\nPlease ensure you read this section thoroughly before attempting the questions.\n:::\n\n::: panel-tabset\n## First\n\nWelcome to the first post. This is to get you up and running. Don't hesitate to reach out if you have any issues with your learning.\n\n## Second\n\nWelcome to the second post. Kindly note the rules of the game. I wish you good luck as a you start your journey.\n:::\n\n## Welcome üôå\n\nIf you do not already have a `gh-pages` branch, you can create one as follows. First, make sure you have committed all changes to your current working branch with `git status`. Then:\n\n\n```{bash}\ngit checkout --orphan gh-pages\ngit reset --hard # make sure all changes are committed before running this! git commit --allow-empty -m \"Initialising gh-pages branch\" \ngit push origin gh-pages\n```\n\n\n## Goodbye üôå\n\n![](images/paste-1.png)\n\n## See you ü§∏‚Äç‚ôÇÔ∏è\n\nPlease make sure the file exists and is executable. According to Did you intend 'assign' as a Lua filter in an extension? If so, make sure you've spelled the name of the extension correctly.\n\nThe original Pandoc error follows below. Error running filter\n\n::: callout-tip\n## ‚úÖ Attention\n\nTake note of the following points:\n\n-   Write your name\n\n-   Write your registration number\n\n-   Attempt all questions\n:::\n\nPlease make sure the file exists and is executable.\n\nDid you intend 'assign' as a Lua filter in an extension? If so, make sure you've spelled the name of the extension correctly.\n\nThe original Pandoc error follows below. Error running filter\n\nDouble-check that the last `git push` action has indeed set the **Settings** : **Pages** for your repository as expected in the previous figure. Get back to your original repository branch with, for example, `git checkout main`.\n\nAccording to @bharadwaj2021, people have a low life expectancy.\n\nWaga and Sigi made their claim 3 years ago [@chris2011].\n\n### **Ignoring Output**\n\nIt‚Äôs important to note that you don‚Äôt need to check your `_site` or `_book` directory into version control (if you have done this in the past you know it makes for very messy diffs!). Before proceeding you should add the output directory of your project to `.gitignore`. For example:\n\n```         \n.gitignore\n```\n\n```         \n/.quarto/ /_site/\n```\n\nIf you‚Äôve already checked these files into source control you may need to remove them explicitly:\n\n```         \nTerminal\n```\n\n```         \ngit rm -r _site\n```\n\n::: callout-warning\n## Error\n\n**There are various types of error in python code execution:**\n\n-   First error [Google](https://google.com)\n\n-   Second error\n\n    1.  New\n    2.  Old\n\n-   Third\n:::\n\n\n---\n# title: \"Intro to Quarto\"\n# number-sections: true\n# # shift-heading-level-by: -1\n# # number-depth: 2\n# number-offset: 0\n# subtitle: My Intro to Quarto Markdown Document\n# subject: Quarto\n# code-annotations: true\n---\n\n\n# 1Ô∏è‚É£ Introduction {#sec-intro}\n\nThis is a [Quarto website](https://quarto.org).\n\nTo learn more about Quarto websites visit <https://quarto.org/docs/websites>.\n\nDid you intend 'assign' as a Lua filter in an extension? If so, make sure you've spelled the name of the extension correctly.\n\n::: column-margin\n{{< placeholder 400 200 format=svg >}} {#fig-placeholder group=\"plots\"}\n:::\n\n::: column-margin\n![AI](ai2.png){#fig-ai2 group=\"plots\"}\n:::\n\n# 2Ô∏è‚É£ Running a Code Block\n\n::: {#c74e67df .cell execution_count=2}\n``` {.python .cell-code}\n# pip list\nprint(\"Done\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDone\n```\n:::\n:::\n\n\n::: {#51bfa2fd .cell execution_count=3}\n``` {.python .cell-code}\npip freeze > pkgs.txt\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNote: you may need to restart the kernel to use updated packages.\n```\n:::\n:::\n\n\n{{< lipsum 2 >}}\n\n{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}\n\n\n<!-- #| cap-location: bottom -->\n\n::: {#cell-fig-plot2 .cell execution_count=4}\n``` {#lst-matplotlib-import .python .cell-code lst-cap=\"Matplotlib Plot 1\"}\nimport matplotlib.pyplot as plt #<1>\nplt.plot([1,23,2,4]) #<2>\n# plt.title((\"Matplotlib Plot\"))\nplt.show() #<3>\nprint(\"Welcome\")\n```\n\n::: {.cell-output .cell-output-display}\n![Matplotlib Figure](index_files/figure-html/fig-plot2-output-1.png){#fig-plot2 width=566 height=411}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nWelcome\n```\n:::\n:::\n\n\n1.  Import matplotlib library\n2.  Run the plot function to plot a list of numbers\n3.  Display the plot\n\nsee the code of @lst-matplotlib-import and the output in @fig-plot2\n\n# 3Ô∏è‚É£ Inserting a Code Cell with File Name\n\n``` {#lst-matplot .python filename=\"matplotlib.py\"}\n|# lightbox:\n|# group: plots\nimport matplotlib.pyplot as plt #<1>\nplt.plot([1,23,2,4]) #<2>\nplt.show() #<3>\n```\n\n1.  Import matplotlib library\n2.  Run the plot function to plot a list of numbers\n3.  Display the plot\n\n<!-- [![Image 2](ai2.png){fig-alt=\"AI Image 2\" fig-align=\"center\"}](ai2) -->\n\n\n{{< fa envelope title=\"An envelope\" >}}\n\n\n# 4Ô∏è‚É£ Inserting Images\n\n![AI2](ai2.png \"AI Image\"){group=\"plots\"}\n\nsee @fig-a2\n\n# 5Ô∏è‚É£ Inserting Tab Panels\n\n::: panel-tabset\n## ‚ùìQuestion\n\nWrite a python code to create a list containing 5 elements. Print out the contents of the list, with each element on a line.\n\n## ‚ùáÔ∏è Rubric\n\n+1 mark for creating the right list\n\n+1 mark for printing out the right contents as instructed above\n\n## üÜó Solution\n\n::: {#0182d50c .cell execution_count=5}\n``` {#lst-pycode1 .python .cell-code lst-cap=\"Python Code 1\"}\nlist1 = [1, 2, 3, 4, 5]\nfor item in list1:\n    print(item, end='\\n')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1\n2\n3\n4\n5\n```\n:::\n:::\n\n\n:::\n\nSee @lst-pycode1\n\n::: {#7eab00da .cell execution_count=6}\n``` {.python .cell-code}\nimport sys\nimport matplotlib.pyplot as plt\nprint(sys.executable)\nprint(sys.path)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nC:\\Users\\Admin\\anaconda3\\python.exe\n['C:\\\\Users\\\\Admin\\\\Koofr\\\\ETTM-Quarto-Website-Blog\\\\academicblogposts\\\\post-with-code', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\python312.zip', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\DLLs', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\Lib', 'C:\\\\Users\\\\Admin\\\\anaconda3', '', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\Lib\\\\site-packages', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\Lib\\\\site-packages\\\\win32', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\Lib\\\\site-packages\\\\win32\\\\lib', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\Lib\\\\site-packages\\\\Pythonwin', 'C:\\\\Users\\\\Admin\\\\anaconda3\\\\Lib\\\\site-packages\\\\setuptools\\\\_vendor']\n```\n:::\n:::\n\n\n[This is a span that has the class aside which places it in the margin without a footnote number.]{.aside}\n\n# 6Ô∏è‚É£ Panel Tab with Hidden Sections\n\n::: {#f720ece6 .cell execution_count=7}\n``` {.python .cell-code}\nprint(\"Hello World!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello World!\n```\n:::\n:::\n\n\n::: {#3b75966b .cell execution_count=8}\n\n::: {.cell-output .cell-output-stdout}\n```\nWrite your code in this python cell and check your output\n```\n:::\n:::\n\n\n::: panel-tabset\n## ‚ùìQuestion 1\n\nCreate a new list named `list1` and Print the list with each element on a new line.\n\n## ‚ú≥Ô∏è Rubric - Expected output\n\n::: {#35227fa8 .cell execution_count=9}\n\n::: {.cell-output .cell-output-stdout}\n```\n1\n2\n3\n4\n5\n```\n:::\n:::\n\n\n## ‚úÖ Solution\n\n::: {#a982294c .cell execution_count=10}\n``` {.python .cell-code code-fold=\"true\"}\nlist1 = [1, 2, 3, 4, 5]\nfor item in list1:\n    print(item, end='\\n')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1\n2\n3\n4\n5\n```\n:::\n:::\n\n\n## üÜó Copy Code File\n\n``` {.python filename=\"list1.py\"}\n#| column: margin\nlist1 = [1, 2, 3, 4, 5] #<1>\nfor item in list1: #<2>\n    print(item, end='\\n') #<2>\n```\n\n1.  Create a new list named `list` containing integers 1 to 5\n2.  Implement a `for` loop through the `list1`, signify the `end='\\n'` parameter.\n:::\n\n## ‚û°Ô∏è Cross Referencing\n\nSee @fig-a2 for details.\n\n::: column-body\n![](ai2.png)\n:::\n\n<br>\n\n::::::: white-div\n::: {.medium-body-text .center-text}\n**We are researchers whose work was so profoundly improved because of the open science community that we are dedicating our careers to empowering others and growing the movement.**\n:::\n\n::::: grid\n::: g-col-6\n![](ai3.png)\n:::\n\n::: g-col-6\n## Hi, I'm WagaSigiUngu\n\nI'm a mathematics PhD students with a passion for R, data visualization, Shiny and statistics/machine learning. On this blog, I share and teach what I learn.\n\nTo get started, you can check out my most popular content below. You can find me on [Twitter](https://twitter.com/rappa753) or [GitHub](https://github.com/AlbertRapp) and [YouTube](https://www.youtube.com/user/Alfrodo123). Feel free to reach out to me via [mail](mailto:blog@albert-rapp.de) and subscribe to my email newsletter.\n\n<iframe id=\"beehiiv-form\" src=\"https://embeds.beehiiv.com/9232d2a2-6e85-4beb-b8ed-1de94e9e4f01?slim=true\" data-test-id=\"beehiiv-embed\" frameborder=\"0\" scrolling=\"no\" style=\"margin: 0; border-radius: 0px !important; background-color: transparent; height: 75px\">\n\n</iframe>\n:::\n\n![AI 3](ai3.png){group=\"plots\" fig-align=\"center\"}\n:::::\n:::::::\n\n# 7Ô∏è‚É£ Heading Number 1\n\n\n{{< lipsum 1 >}}\n\n\n``` {.python filename=\"list1.py\"}\n#| column: margin\nlist1 = [1, 2, 3, 4, 5] #<1>\nfor item in list1: #<2>\n    print(item, end='\\n') #<2>\n```\n\n## Sub Heading\n\n\n{{< lipsum 1 >}}\n\n\n### Sub sub Heading 3\n\n\n{{< lipsum 1 >}}\n\n\n# 8Ô∏è‚É£ Another Heading 1\n\n\n{{< lipsum 1 >}}\n\n\n## Heading 2\n\n\n{{< lipsum 1 >}}\n\n\n### Heading 3\n\n\n{{< lipsum 1 >}}\n\n\n#### Heading 4\n\n\n{{< lipsum 1 >}}\n\n\n::: {#fig-ai layout-ncol=\"2\"}\n![AI 1](ai2.png){#fig-a1} AI 1\n\n![AAI 2](ai3.png){#fig-a2} AI 2 Famous AI Images\n:::\n\nSee @fig-a1 and @fig-a2\n\n# 9Ô∏è‚É£ Heading 1\n\nSee @fig-ai for examples. In particular, @fig-a2.\n\nSee @sec-intro for the beginning.\n\n![A drawing of an elephant.](elephant.png)\\\n\n# Row Layout\n\n::: {layout-nrow=\"2\"}\n![Surus](elephant.png)\n\n![Hanno](ai2.png)\n\n![Abdul Abbas](ai3.png)\n\n![Lin Wang](elephant.png)\n:::\n\n# Column Layout\n\n::: {layout-ncol=\"2\"}\n![](elephant)\n\n![](ai3)\n:::\n\n------------------------------------------------------------------------\n\n# Custom Figure Layout\n\n::: {layout=\"[[1,1], [1]]\"}\n![Surus](ai2.png)\n\n![Hanno](ai3.png)\n\n![Big Elephant](elephant.png)\n:::\n\n::: {layout-ncol=\"2\"}\n### List One\n\n-   Item A\n-   Item B\n-   Item C\n\n### List Two\n\n-   Item X\n-   Item Y\n-   Item Z\n:::\n\n:::: callout-warning\n## References\n\n::: {#refs}\n:::\n\n------------------------------------------------------------------------\n::::\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}